<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Django 中 session 和 cookie 的存、取、删除</title>
    <url>/2019/06/25/Django%20%E4%B8%AD%20session%20%E5%92%8C%20cookie%20%E7%9A%84%E5%AD%98%E3%80%81%E5%8F%96%E3%80%81%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<h4 id="cookie的存："><a href="#cookie的存：" class="headerlink" title="cookie的存："></a><em>cookie的存：</em></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response = HttpResponse(<span class="string">'登陆成功'</span>)     <span class="comment">#改成重定向等都可以</span></span><br><span class="line">response.set_cookie(<span class="string">'username'</span>,username)</span><br><span class="line"><span class="comment">#response.set_signed_cookie('username',username,salt='asdasd')    #带签名的cookie(加盐)response.set_cookie('password',password) return response</span></span><br></pre></td></tr></table></figure><a id="more"></a>

<p>cookie的取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">username = request.COOKIES.get(<span class="string">'username'</span>)</span><br><span class="line"><span class="comment">#username=request.get_signed_cookie('username',salt='asdasd')     #获取带签名的cookie（盐要相同，不然拿不到）password = request.COOKIES.get('password')</span></span><br></pre></td></tr></table></figure>

<p>cookie的删除：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response = HttpResponse(<span class="string">'清除成功'</span>)      <span class="comment">#改成重定向等都可以</span></span><br><span class="line">response.delete_cookie(<span class="string">'username'</span>)</span><br><span class="line">response.delete_cookie(<span class="string">'password'</span>)</span><br><span class="line"><span class="keyword">return</span> response</span><br></pre></td></tr></table></figure>

<p> PS：不设置过期时间的话，默认关闭浏览器就失效</p>
<h4 id="session的存："><a href="#session的存：" class="headerlink" title="session的存："></a>session的存：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">request.session[<span class="string">'username'</span>] = username<span class="comment">#上面这一句代码完成了以下事情：#1、生成随机字符串#2、将随机字符串写到用户浏览器cookie#3、将随机字符串保存到服务器session#4、在服务器随机字符串对应的字典中设置相关内容</span></span><br><span class="line">request.session[<span class="string">'password'</span>] = password</span><br><span class="line"><span class="keyword">return</span> HttpResponse(<span class="string">'登陆成功'</span>)</span><br></pre></td></tr></table></figure>

<p>session的取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">username = request.session.get(<span class="string">'username'</span>)<span class="comment">#username = request.session['username']      #两种方式都可以取，但是这种如果没取到会报错</span></span><br><span class="line">password = request.session.get(<span class="string">'password'</span>)</span><br></pre></td></tr></table></figure>

<p>session的删除：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">request.session.flush()    <span class="comment">#删除所有session#del request.session['username']   #删除key为username的session</span></span><br><span class="line"><span class="keyword">return</span> HttpResponse(<span class="string">'清除成功'</span>)</span><br></pre></td></tr></table></figure>

<p> PS：在django中，session默认的过期时间是两周</p>
]]></content>
      <categories>
        <category>Django</category>
      </categories>
  </entry>
</search>
